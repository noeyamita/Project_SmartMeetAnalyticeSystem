const API_BASE = "src/api/";
let selectedRoom = null;
let searchCriteria = null;

// ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
document.addEventListener("DOMContentLoaded", function () {
    const today = new Date().toISOString().split("T")[0];
    document.getElementById("date").value = today;
    document.getElementById("date").min = today;

    const now = new Date();
    const hours = String(now.getHours()).padStart(2, "0");
    const minutes = String(Math.ceil(now.getMinutes() / 30) * 30).padStart(2, "0");
    document.getElementById("start_time").value = `${hours}:${minutes}`;
    document.getElementById("end_time").value = `${String((now.getHours() + 1) % 24).padStart(2, "0")}:${minutes}`;

    displayInitialMessage();
});


//‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å API
async function searchRooms() {
    const date = document.getElementById("date").value;
    const startTime = document.getElementById("start_time").value;
    const endTime = document.getElementById("end_time").value;
    const capacity = parseInt(document.getElementById("capacity").value) || 1;


    if (!date || !startTime || !endTime) {
        showAlert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô", "error");
        return;
    }
    if (startTime >= endTime) {
        showAlert("‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î", "error");
        return;
    }

    searchCriteria = { date, startTime, endTime, capacity };

    try {
        // ‡∏î‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏≤‡∏Å API
        const bookings = await fetchBookings(date);

        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°
        const rooms = await fetchRooms(capacity);
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á
        const availableRooms = rooms.map(room => {
            const isBooked = bookings.some(b => {
                const overlap = b.room_id == room.room_id &&
                    timeOverlap(startTime, endTime, b.start_time, b.end_time);
                if (overlap) {
                    console.log(`‚ùå ‡∏´‡πâ‡∏≠‡∏á ${room.room_name} ‡∏ñ‡∏π‡∏Å‡∏à‡∏≠‡∏á:`, b);
                }
                return overlap;
            });
            return { ...room, isAvailable: !isBooked };
        });

        displayRooms(availableRooms);
        const availableCount = availableRooms.filter(r => r.isAvailable).length;
        if (availableCount > 0) {
            showAlert(`‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á ${availableCount} ‡∏´‡πâ‡∏≠‡∏á (‡∏à‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${rooms.length} ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö ${capacity} ‡∏Ñ‡∏ô)`, "success");
        } else if (rooms.length > 0) {
            showAlert(`‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö ${capacity} ‡∏Ñ‡∏ô ‡πÅ‡∏ï‡πà‡∏ñ‡∏π‡∏Å‡∏à‡∏≠‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ`, "warning");
        } else {
            showAlert(`‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö ${capacity} ‡∏Ñ‡∏ô`, "error");
        }
    } catch (error) {
        console.error('‚ùó Error:', error);
        showAlert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: " + error.message, "error");
    }
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô
function timeOverlap(startA, endA, startB, endB) {
    return startA < endB && endA > startB;
}

// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API
async function fetchRooms(capacity = 0) {
    const url = `${API_BASE}getRooms.php?capacity=${capacity}`;

    const res = await fetch(url);
    const json = await res.json();

    if (json.status !== "success") throw new Error(json.message);
    return json.data;
}

// ‡∏î‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏à‡∏≤‡∏Å backend
async function fetchBookings(date) {
    const res = await fetch(`${API_BASE}getBookings.php?date=${date}`);
    const json = await res.json();
    if (json.status !== "success") throw new Error(json.message);
    return json.data;
}

// ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
async function createBooking(data) {
    const res = await fetch(`${API_BASE}createBooking.php`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(data),
    });
    const json = await res.json();
    return json;
}

// UI ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
function displayRooms(roomList) {
    const grid = document.getElementById("roomsGrid");
    if (roomList.length === 0) {
        displayNoRooms();
        return;
    }
    grid.innerHTML = roomList
        .map(
            (room) => `
        <div class="room-card">
            <div class="room-title">${room.room_name}</div>
            <div class="room-cap">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏∏: ${room.capacity} ‡∏Ñ‡∏ô ‚Ä¢ ${room.floor_number}</div>
            <div style="font-size: 12px; color: #95a5a6; margin-bottom: 12px;">
                ${(room.facilities || []).join(" ‚Ä¢ ")}
            </div>
            <div class="room-status">
                <div class="status-badge">
                    <span class="chip ${room.isAvailable ? "available" : "booked"}"></span>
                    <span>${room.isAvailable ? "‡∏´‡πâ‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á" : "‡∏ñ‡∏π‡∏Å‡∏à‡∏≠‡∏á"}</span>
                </div>
                ${room.isAvailable
                    ? `<button class="btn" onclick="selectRoom(${room.room_id})">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á</button>`
                    : `<button class="btn" disabled>‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á</button>`
                }
            </div>
        </div>`
        )
        .join("");
}

function displayNoRooms() {
    document.getElementById("roomsGrid").innerHTML = `
        <div class="empty-state">
            <div style="font-size: 64px; opacity: 0.3;">üòî</div>
            <p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</p>
        </div>
    `;
}

function displayInitialMessage() {
    document.getElementById("roomsGrid").innerHTML = `
        <div class="empty-state">
            <div style="font-size: 64px; opacity: 0.3;">üìÖ</div>
            <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á</p>
        </div>
    `;
}

// Modal ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
function selectRoom(roomId) {
    fetchRooms(searchCriteria.capacity).then((rooms) => {
        selectedRoom = rooms.find((r) => r.room_id === roomId);
        if (!selectedRoom || !searchCriteria) {
            showAlert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà", "error");
            return;
        }

        document.getElementById("modalRoomInfo").textContent =
            `${selectedRoom.room_name} | ${searchCriteria.date} | ${searchCriteria.startTime} - ${searchCriteria.endTime}`;
        document.getElementById("meeting_title").value = "";
        document.getElementById("meeting_description").value = "";
        document.getElementById("bookingModal").classList.add("active");
    });
}

function closeModal() {
    document.getElementById("bookingModal").classList.remove("active");
    selectedRoom = null;
}

async function confirmBooking() {
    const title = document.getElementById("meeting_title").value.trim();
    const desc = document.getElementById("meeting_description").value.trim();

    if (!title) {
        showAlert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°", "error");
        return;
    }

    const newBooking = {
        user_id: 1,
        room_id: selectedRoom.room_id,
        booking_date: searchCriteria.date,
        start_time: parseFloat(searchCriteria.startTime.replace(":", ".")),
        end_time: parseFloat(searchCriteria.endTime.replace(":", ".")),
        purpose: title,
        attendees_count: searchCriteria.capacity,
        table_layout: 1,
    };

    const result = await createBooking(newBooking);

    if (result.status === "success") {
        closeModal();
        showAlert(`‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á ${selectedRoom.room_name} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`, "success");
        setTimeout(searchRooms, 1000);
    } else {
        showAlert("‡∏à‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + result.message, "error");
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤
function resetSearch() {
    const today = new Date().toISOString().split("T")[0];
    document.getElementById("date").value = today;

    const now = new Date();
    const hours = String(now.getHours()).padStart(2, "0");
    const minutes = String(Math.ceil(now.getMinutes() / 30) * 30).padStart(2, "0");
    document.getElementById("start_time").value = `${hours}:${minutes}`;
    document.getElementById("end_time").value = `${String((now.getHours() + 1) % 24).padStart(2, "0")}:${minutes}`;
    document.getElementById("capacity").value = "1";

    displayInitialMessage();
    searchCriteria = null;
}

// ============================================
// üîî ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
// ============================================
function showAlert(message, type) {
    const alertBox = document.getElementById("alertBox");
    alertBox.textContent = message;
    alertBox.className = `alert ${type} active`;
    setTimeout(() => hideAlert(), 4000);
}

function hideAlert() {
    document.getElementById("alertBox").classList.remove("active");
}

// ‡∏õ‡∏¥‡∏î modal ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ô‡∏≠‡∏Å‡∏Å‡∏•‡πà‡∏≠‡∏á
document.addEventListener("click", function (e) {
    const modal = document.getElementById("bookingModal");
    if (e.target === modal) closeModal();
});